:root {
    --bg-color: white;
    --color: black;
    --num-font-size: 16px;
    --clue-font-size: 16px;
    --clue-header-size: 1.75rem;
    --cell-size: 2.5rem;
    --board-size: min(85vmin, 95vw);
    user-select: none;
}

.dark-mode {
    --bg-color: black;
    --color: white;
}

body {
    margin: 0;
    background-color: var(--bg-color);
    color: var(--color);
    text-align: center;
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-height: 100vh;
}

footer p {
    margin: 0;
}

.footer-brand {
    letter-spacing: 0.04em;
}

.top-bar{
    display: flex;
    flex-direction: row;
    margin: 1rem 0;
    align-content: center;
    align-items: center;
    justify-content: space-between;
}

main {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-container {
    width: var(--board-size);
    height: var(--board-size);
    max-width: min(85vmin, 95vw);
    max-height: min(85vmin, 95vh);
    table-layout: fixed;
    border-collapse: collapse;
    background-color: var(--bg-color);
    color: var(--color);
    margin: 0;
    padding: 0;
    border-color: var(--color);
}

/* td {
    border: 1px solid var(--color);
    padding: 0 !important;
} */

tr td:not(:first-child):nth-child(5n + 2) {
    border-left: 3px solid var(--color);
}

tr td:last-child {
    border-right: 3px solid var(--color);
}

table tr:nth-child(5n + 2) td {
    border-top: 3px solid var(--color);
}

table tr:last-child td {
    border-bottom: 3px solid var(--color);
}

@-moz-document url-prefix() {
    /* force consistent border color in firefox when clue headers change text color */
    .game-container td:not(.drag-preview) {
        border-color: var(--color) !important;
    }

    .drag-preview {
        position: relative;
        border: 1px solid var(--bg-color) !important;
        outline: none !important;
    }

    .drag-preview::after {
        content: '';
        position: absolute;
        inset: -2px;
        border: 3px dashed blue;
        background-color: inherit;
        pointer-events: none;
        box-sizing: border-box;
    }
    .dark-mode .drag-preview::after {
        border-color: red;
        background-color: inherit;
    }
}

.corner {
    width: var(--clue-header-size);
    height: var(--clue-header-size);
    box-sizing: border-box;
}

.top {
    vertical-align: bottom;
    font-weight: bold;
    width: var(--cell-size);
    min-width: var(--cell-size);
    height: var(--clue-header-size);
    font-size: var(--clue-font-size);
    /* line-height: 0.9;  */
    line-height: 1.1;
    -webkit-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    box-sizing: border-box;
}

.clue-text {
    display: inline-block;
    width: auto;
    max-width: 100%;
    text-align: inherit;
}

.clue-indicator {
    display: none;
    line-height: inherit;
}

.top.clue-overflow .clue-text,
.side.clue-overflow .clue-text {
    display: none;
}

.top.clue-overflow .clue-indicator,
.side.clue-overflow .clue-indicator {
    display: inline-block;
    width: 100%;
    text-align: center;
}

.top.clue-overflow,
.side.clue-overflow {
    position: relative;
    cursor: help;
    overflow: visible;
}

.clue-tooltip {
    position: absolute;
    background-color: var(--bg-color);
    color: var(--color);
    font-family: 'Times New Roman', Times, serif;
    font-weight: bold;
    padding: 0 0.25rem 0 0.25rem;
    /* border-radius: 4px; */
    font-size: var(--clue-font-size);
    white-space: normal;
    text-align: left;
    max-width: min(16rem, 40vw);
    /* box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25); */
    pointer-events: none;
    z-index: 10;
    opacity: 0;
    visibility: hidden;
    /* transition: opacity 0.1s ease; */
    border: 2px solid var(--color);
}

.clue-tooltip.visible {
    opacity: 1;
    visibility: visible;
}

.clue-tooltip.complete {
    background-color: blue;
    border-color: var(--color);
    color: var(--color);
}

.dark-mode .clue-tooltip.complete {
    background-color: red;
    border-color: var(--color);
    color: var(--color);
}

.top:focus,
.top:focus-visible,
.side:focus,
.side:focus-visible,
.cell:focus,
.cell:focus-visible {
    outline: none;
    box-shadow: none;
    -webkit-tap-highlight-color: transparent;
}

.top.wrong {
    background-color: red;
}

.dark-mode .top.wrong {
    background-color: blue;
}

.side {
    text-align: right; 
    font-weight: bold;
    width: var(--clue-header-size);
    min-width: var(--clue-header-size);
    height: var(--cell-size);
    min-height: var(--cell-size);
    font-size: var(--clue-font-size);
    line-height: 0.9; 
    -webkit-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    box-sizing: border-box;
}

.cell {
    width: var(--cell-size);
    min-width: var(--cell-size);
    height: var(--cell-size);
    min-height: var(--cell-size);
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

.clicked {
    background-color: blue;
}

.dark-mode .clicked {
    background-color: red;
}

.greyed {
    background-color: #C0C0C0;
}

.dark-mode .greyed{
    background-color: #454545;
}

.marked {
    position: relative;
}

.marked::after {
    content: 'X';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 12px;
    color: black;
    pointer-events: none;
}

.dark-mode .marked {
    position: relative;
}

.dark-mode .marked::after {
    content: 'X';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 12px;
    color: white;
    pointer-events: none;
}

/* Drag preview styling */
.drag-preview {
    /* background-color: rgba(0, 0, 255, 0.3); */
    border: 3px dashed blue;
}

.dark-mode .drag-preview {
    /* background-color: rgba(255, 0, 0, 0.3); */
    border: 3px dashed red;
}

/* Ensure board borders always take priority over drag preview */
tr td.drag-preview:not(:first-child):nth-child(5n + 2) {
    border-left: 3px solid var(--color) !important;
}

tr td.drag-preview:last-child {
    border-right: 3px solid var(--color) !important;
}

table tr:nth-child(5n + 2) td.drag-preview {
    border-top: 3px solid var(--color) !important;
}

table tr:last-child td.drag-preview {
    border-bottom: 3px solid var(--color) !important;
}

.highlight {
    position: relative;
}

.highlight::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 12px;
    color: black;
    pointer-events: none;
}

.top.highlight{
    background-color: black;
    color: white;
}

.top.highlight::after {
    content: none;
}

.side.highlight{
    background-color: black;
    color: white;
}

.side.highlight::after {
    content: none;
}

.top.highlight.complete,
.side.highlight.complete {
    background-color: black;
    color: blue;
}

.dark-mode .top.highlight.complete,
.dark-mode .side.highlight.complete {
    background-color: white;
    color: red;
}

.dark-mode .highlight {
    position: relative;
}

.dark-mode .highlight::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 12px;
    color: white;
    pointer-events: none;
}

.dark-mode .top.highlight{
    background-color: white;
    color: black;
}

.dark-mode .top.highlight::after {
    content: none;
}

.dark-mode .side.highlight{
    background-color: white;
    color: black;
}

.dark-mode .side.highlight::after {
    content: none;
}

.settings-panel {
    background-color: var(--bg-color);
    font-size: 1rem;
}

.difficulty-button{
    cursor: pointer;
    margin: 0;
    padding: 0 0; /* change this for vertical bars on mode buttons */
    font-size: 16px;
    background-color: var(--bg-color); /* call --bg from global */
    color: var(--text-color);
    border: none; 
}

.difficulty-button.active{
    background-color: blue;
    color: blue;
}

.dark-mode .difficulty-button.active{
    background-color: red;
    color: red;
}

.difficulty-button.active:hover{
    background-color: blue;
    color: blue;
}

.dark-mode .difficulty-button.active:hover{
    background-color: red;
    color: red;
}

.difficulty-button:hover {
    background-color: grey;
}

button {
    cursor: pointer;
    margin: 0;
    padding: 0 0; /* change this for vertical bars on mode buttons */
    font-size: 16px;
    background-color: var(--bg-color); /* call --bg from global */
    color: var(--text-color);
    border: none; 
}

button:hover {
    background-color: grey;
}

.win-paste {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    align-items: center;
}

/* .top .highlight{
    background-color: black;
    color: white;

}

.dark-mode .highlight {
    background-color: purple;
} */


.hidden {
    display: none;
}

.complete {
    background-color: blue;
    /* color: blue; */
}

.dark-mode .complete {
    background-color: red;
    /* color: red; */
}

#settings-panel,
#load-panel {
    position: absolute;
    left: 0;
    bottom: calc(100% + 4px);
    display: none;
    gap: 0.5rem;
    align-items: center;
}

#settings-panel {
    flex-wrap: nowrap;
    flex-direction: row;
}

#load-panel {
    left: auto;
}

#settings-panel:not(.hidden),
#load-panel:not(.hidden) {
    display: flex;
}

.settings-group {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    gap: 0.5rem; /* matches win-paste gap */
}

.panel-anchor {
    position: relative;
    display: inline-flex;
    align-items: center;
}

/* keep this, janky */
#load-panel {
    /* z-index: 1000; */
    background: var(--bg-color);
    min-width: 9rem;
    left: -4.5rem;
    right: 0;
    bottom: calc(100% + 4px);
}

#load-panel input {
    color: var(--color);
    background-color: var(--bg-color);
    border: none;
    caret-color: blue;
    font-size: 16px;
}

#load-panel input:focus {
    outline: none;
    box-shadow: none;
}

#load-panel input::placeholder {
    color: grey;
}

.dark-mode #load-panel input {
    background-color: black;
    color: white;
    caret-color: red;
}

.dark-mode #load-panel input::placeholder {
    color: grey;
}
